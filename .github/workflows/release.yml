pname: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: "true"

  build:
    needs: create_release
    strategy:
      matrix:
        include:
          - target: "x86_64-pc-windows-msvc"
            os: "windows-latest"
            binary_suffix: ".exe"
          - target: "x86_64-unknown-linux-gnu"
            os: "ubuntu-latest"
            binary_suffix: ""
          - target: "x86_64-apple-darwin"
            os: "macos-latest"
            binary_suffix: ""
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Rust Nightly Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: ${{ matrix.target }}

      - name: Add target if needed
        run: rustup target add ${{ matrix.target }}

      - name: Build binary for Windows (release-windows profile)
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: cargo build --target ${{ matrix.target }} --profile release-windows

      - name: Build binary for Unix (default release profile)
        if: matrix.target != 'x86_64-pc-windows-msvc'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary on Windows (zip)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path "./target/${{ matrix.target }}/release/texhigh${{ matrix.binary_suffix }}" -DestinationPath "texhigh-${{ matrix.target }}.zip" -Force

      - name: Package binary on Unix (tar.gz)
        if: runner.os != 'Windows'
        run: |
          tar -czvf texhigh-${{ matrix.target }}.tar.gz -C ./target/${{ matrix.target }}/release texhigh

      - name: Upload asset (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: texhigh-${{ matrix.target }}.zip
          asset_name: texhigh-${{ matrix.target }}.zip
          asset_content_type: application/zip

      - name: Upload asset (Unix)
        if: runner.os != 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: texhigh-${{ matrix.target }}.tar.gz
          asset_name: texhigh-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip
